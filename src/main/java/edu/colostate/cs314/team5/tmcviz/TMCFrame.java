package edu.colostate.cs314.team5.tmcviz;

import com.mxgraph.swing.mxGraphComponent;
import edu.colostate.cs314.team5.tmcviz.sim.RailMap;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.InputEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JEditorPane;
import javax.swing.JLabel;
import javax.swing.JMenu;
import javax.swing.JMenuBar;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.KeyStroke;
import javax.swing.LayoutStyle;
import javax.swing.ScrollPaneConstants;
import javax.swing.WindowConstants;

/**
 *
 * @author tim
 */
public class TMCFrame extends javax.swing.JFrame {

	private mxGraphComponent graphView;
	private TMCGraph graph;
	
	/**
	 * Creates new form TMCFrame
	 */
	public TMCFrame() {
		initComponents();
		
		graph = new TMCGraph();
		graphView = new mxGraphComponent(graph);
		graphContainer.add(graphView, BorderLayout.CENTER);
		
		mapEditField.setText(
				"FoCoSys["
						+ "{0000:FTCL;LGMT:4}"
						+ "{0001:LGMT;FTCL:3}"
						+ "{0002:LGMT;BOLD:2}"
						+ "{0005:BOLD;FTCL:5}"
						+ "]");
		mapEditButtonActionPerformed(null);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        vertSplit = new JSplitPane();
        metaContainer = new JPanel();
        buttonContainer = new JPanel();
        mapEditButton = new JButton();
        mapEditField = new JTextField();
        graphContainer = new JPanel();
        ioContainer = new JPanel();
        outputPaneScroll = new JScrollPane();
        outputPane = new JEditorPane();
        execSingleField = new JTextField();
        execFileButton = new JButton();
        execSingleButton = new JButton();
        menuBar = new JMenuBar();
        fileMenu = new JMenu();
        quitItem = new JMenuItem();
        editMenu = new JMenu();
        propertiesItem = new JMenuItem();

        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        setTitle("TMCViz");

        vertSplit.setOrientation(JSplitPane.VERTICAL_SPLIT);
        vertSplit.setResizeWeight(1.0);

        metaContainer.setBorder(BorderFactory.createTitledBorder("Current State"));
        metaContainer.setLayout(new BorderLayout());

        buttonContainer.setMaximumSize(new Dimension(32767, 200));

        mapEditButton.setText("Set Map");
        mapEditButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                mapEditButtonActionPerformed(evt);
            }
        });

        mapEditField.addKeyListener(new KeyAdapter() {
            public void keyReleased(KeyEvent evt) {
                mapEditFieldKeyReleased(evt);
            }
        });

        GroupLayout buttonContainerLayout = new GroupLayout(buttonContainer);
        buttonContainer.setLayout(buttonContainerLayout);
        buttonContainerLayout.setHorizontalGroup(
            buttonContainerLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, buttonContainerLayout.createSequentialGroup()
                .addComponent(mapEditField, GroupLayout.DEFAULT_SIZE, 505, Short.MAX_VALUE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mapEditButton)
                .addContainerGap())
        );
        buttonContainerLayout.setVerticalGroup(
            buttonContainerLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, buttonContainerLayout.createSequentialGroup()
                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(buttonContainerLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(mapEditButton)
                    .addComponent(mapEditField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        metaContainer.add(buttonContainer, BorderLayout.SOUTH);

        graphContainer.setBorder(null);
        graphContainer.setLayout(new BorderLayout());
        metaContainer.add(graphContainer, BorderLayout.CENTER);

        vertSplit.setTopComponent(metaContainer);

        ioContainer.setBorder(BorderFactory.createTitledBorder("Output"));
        ioContainer.setMinimumSize(new Dimension(0, 150));

        outputPaneScroll.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        outputPane.setEditable(false);
        outputPane.setMinimumSize(new Dimension(112, 100));
        outputPaneScroll.setViewportView(outputPane);

        execSingleField.setEnabled(false);

        execFileButton.setText("From File...");

        execSingleButton.setText("Execute");
        execSingleButton.setEnabled(false);

        GroupLayout ioContainerLayout = new GroupLayout(ioContainer);
        ioContainer.setLayout(ioContainerLayout);
        ioContainerLayout.setHorizontalGroup(
            ioContainerLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addComponent(outputPaneScroll, GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
            .addGroup(ioContainerLayout.createSequentialGroup()
                .addComponent(execSingleField)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(execSingleButton)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(execFileButton)
                .addContainerGap())
        );
        ioContainerLayout.setVerticalGroup(
            ioContainerLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(GroupLayout.Alignment.TRAILING, ioContainerLayout.createSequentialGroup()
                .addGroup(ioContainerLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                    .addComponent(execSingleField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addComponent(execFileButton)
                    .addComponent(execSingleButton))
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(outputPaneScroll, GroupLayout.DEFAULT_SIZE, 76, Short.MAX_VALUE))
        );

        vertSplit.setBottomComponent(ioContainer);

        fileMenu.setText("File");

        quitItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_Q, InputEvent.CTRL_MASK));
        quitItem.setText("Quit");
        fileMenu.add(quitItem);

        menuBar.add(fileMenu);

        editMenu.setText("Edit");

        propertiesItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_P, InputEvent.CTRL_MASK));
        propertiesItem.setText("Properties...");
        editMenu.add(propertiesItem);

        menuBar.add(editMenu);

        setJMenuBar(menuBar);

        GroupLayout layout = new GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vertSplit)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(vertSplit, GroupLayout.DEFAULT_SIZE, 600, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mapEditButtonActionPerformed(ActionEvent evt) {//GEN-FIRST:event_mapEditButtonActionPerformed
        try {
			RailMap map = RailMap.parse(mapEditField.getText());
			graph.setMap(map);
		} catch (Exception ex) {
			JOptionPane.showMessageDialog(
					this,
					"Invalid railmap - check your syntax.\n" + ex.getMessage(),
					"Invalid railmap",
					JOptionPane.ERROR_MESSAGE);
		}
    }//GEN-LAST:event_mapEditButtonActionPerformed

    private void mapEditFieldKeyReleased(KeyEvent evt) {//GEN-FIRST:event_mapEditFieldKeyReleased
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
			mapEditButtonActionPerformed(null);
		}
    }//GEN-LAST:event_mapEditFieldKeyReleased

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
		 * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(TMCFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(TMCFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(TMCFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(TMCFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
        //</editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new TMCFrame().setVisible(true);
			}
		});
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private JPanel buttonContainer;
    private JMenu editMenu;
    private JButton execFileButton;
    private JButton execSingleButton;
    private JTextField execSingleField;
    private JMenu fileMenu;
    private JPanel graphContainer;
    private JPanel ioContainer;
    private JButton mapEditButton;
    private JTextField mapEditField;
    private JMenuBar menuBar;
    private JPanel metaContainer;
    private JEditorPane outputPane;
    private JScrollPane outputPaneScroll;
    private JMenuItem propertiesItem;
    private JMenuItem quitItem;
    private JSplitPane vertSplit;
    // End of variables declaration//GEN-END:variables
}
